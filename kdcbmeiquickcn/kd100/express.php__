<?php
/**
 * 客户端
 */
	header("Content-type: text/html; charset=utf-8");  

	/*//模拟返回的json数据
	$Gjson = '{"message":"","nu":"221014000103","companytype":"shentong","ischeck":"1","com":"shentong","updatetime":"2015-05-19 11:39:56","status":"200","condition":"F00","codenumber":"221014000103","data":[{"time":"2015-04-28 15:46:48","location":"","context":"已签收,签收人是前台签收","ftime":"2015-04-28 15:46:48"},{"time":"2015-04-28 08:47:46","location":"","context":"广东番禺大岗 的派件员 东涌点李文峰 正在派件","ftime":"2015-04-28 08:47:46"}],"state":"3"}';
	$j = '{"status":"shutdown","message":"3天查询无记录","lastResult":'.$Gjson.'}';	//自定义json
	*/
	
	$j = isset($_POST['param'])?$_POST['param']:null;
	$j = trim($j);

	//echo 'RS:<br/>';

	

//====================================== 一下为正式处理行为 ======================================	
	//如果是合法的json
	if($j=='' || $j == null || (!is_json($j))){
		$arr = array(
			'result'=>'false',
			'returnCode'=>'700',
			'message'=>'数据形式错误',
		);
		echo json_encode($arr);
		exit;
	}
	$res  = $j;
	//$res = analyJson($j);	//解释json为数组形式
	//TJson($res);	//处理方法

	//print_r($res);
	//exit;
	/**
	 * 客户端 快递100回调数据处理    由于是模拟接收json所用，此函数启用时删除，只需要里面的代码使用即可
	 * @param [type] $res [回调的json解释后的数组]
	 */
	//function TJson($res){
	    require_once("./../../hprose2/Hprose.php");
		include('ex_config.php');
	    $client = new HproseHttpClient($serurl);
       
        $msg = $client->info($res);
        // dump($msg);
        if($msg['title'] == 'abort' && $msg['do'] == 'yes'){

        	echo $str_s;exit;

        }else if($msg['title'] != 'abort' && $msg['do'] == 'yes'){

        	echo $str_s;exit;

        }else if($msg['title'] != 'abort' && $msg['do'] == 'no'){

        	echo $str_f;exit;

        }

	//}


//=============================== 检验用 ==============================================

	//判断数据是合法的json数据:
	function is_json($string) {
		json_decode($string);
		return (json_last_error() == JSON_ERROR_NONE);	//json_last_error()函数返回数据编解码过程中发生的错误
	}

	/**
	* 解析json串
	* @param type $json_str
	* @return type
	*/
	function analyJson($json_str) {
		$json_str = str_replace('\\', '', $json_str);
		$out_arr = array();
		preg_match('/{.*}/', $json_str, $out_arr);
		if (!empty($out_arr)) {
			$result = json_decode($out_arr[0], TRUE);
		} else {
			return FALSE;
		}

		return $result;
	}

	//测试用打印输出
	function dump($data){
		echo '<pre>';
		print_r($data);
		echo '</pre>';
		return $data;
	}

?>