<?php
	/**
	 * 会员审核成功 生成邮件发送语句    中英文互译
	 * @param  [type] $username [会员名称]
	 * @param  [type] $code     [邮箱验证码]
	 * @return [type]           [description]
	 */
	function create_success_content($str, $username){
		$time = date('Y-m-d');
        return sprintf($str, $username, $time);
	}

	/**
	 * 会员审核失败 生成邮件发送语句   中英文互译
	 * @param  [type] $username [会员名称]
	 * @param  [type] $code     [邮箱验证码]
	 * @return [type]           [description]
	 */
	function create_fail_content($str, $username,$msg){
		$time = date('Y-m-d');
        return sprintf($str, $username, $msg, $time);
	}

    /**
     * 根据中文、字母或数字、字母和数字组合3种情况截取
     * @param  [type] $str [description]
     * @return [type]      [description]
     */
    function change_code($str, $leng=2, $room='**'){
    	//如果是纯字母、纯数字、字母+数字组合
	    if (preg_match('/^[0-9a-zA-Z]*$/',$str)) {
	        $str1 = substr_replace($str, $room, $leng);
	    } else {	//如果是纯中文
	        $str1 = mb_substr($str,0,($leng-1),'utf-8').$room;
	    }
	    return $str1;
    }

    // 隐藏中间部分不显示
	function hidIdno($idcard){
		$idcard = trim($idcard);
		return (strlen($idcard)==15)?substr_replace($idcard,"****",8,4):(strlen($idcard)==18?substr_replace($idcard,"****",10,4):"身份证号码为空");
	}

	// 斜杠号转换
	function K($str){
		return str_replace('/', '\\', str_replace('///', '\\', $str));
	}

	function J($str){
		return str_replace('./', '/', str_replace('///', '/', $str));
	}

	/**
	 * 计量单位代码表
	 * @param  [type]  $str [description]
	 * @param  boolean $on  [是否直接返回 计量单位代码数组]
	 * @return [type]       [description]
	 */
	function unit_code($str, $on=false){

		$arr = array(
			'台' => '001','座' => '002','辆' => '003','艘' => '004','架' => '005','套' => '006','个' => '007','只' => '008','头' => '009','张' => '010','件' => '011','支' => '012','枝' => '013','根' => '014','条' => '015','把' => '016','块' => '017','卷' => '018','副' => '019','片' => '020','组' => '021','份' => '022','幅' => '023','双' => '025','对' => '026','棵' => '027','株' => '028','井' => '029','米' => '030','盘' => '031','平方米' => '032','立方米' => '033','筒' => '034','千克' => '035','克' => '036','盆' => '037','具' => '039','刀' => '045','疋' => '046','英尺' => '067','吨' => '070','斤' => '075','磅' => '076','担' => '077','两' => '080','盎司' => '083','克拉' => '084','市尺' => '085','码' => '086','英寸' => '088','寸' => '089','升' => '095','毫升' => '096','英加仑' => '097','美加仑' => '098','令' => '118','箱' => '120','批' => '121','罐' => '122','桶' => '123','扎' => '124','包' => '125','箩' => '126','打' => '127','筐' => '128','罗' => '129','匹' => '130','册' => '131','本' => '132','发' => '133','枚' => '134','捆' => '135','袋' => '136','粒' => '139','盒' => '140','合' => '141','瓶' => '142','部' => '163',
		);
		
		$arr = array_flip($arr);//反转数组中所有的键以及它们关联的值

		if($on == true){
			return $arr;
		}

		$str = trim($str);
		
		return $arr[$str];
	}

	/**
	 * 国家（地区）代码表
	 * @param  [type]  $str [description]
	 * @param  boolean $on  [是否直接返回 国家（地区）代码代码数组]
	 * @return [type]       [description]
	 */
	function country_code($str, $on=false){
		
		$arr = array(
			'101' => '阿富汗','102' => '巴林','103' => '孟加拉国','104' => '不丹','105' => '文莱','106' => '缅甸','107' => '柬埔寨','108' => '塞浦路斯','109' => '朝鲜','110' => '香港','111' => '印度','112' => '印度尼西亚','113' => '伊朗','114' => '伊拉克','115' => '以色列','116' => '日本','117' => '约旦','118' => '科威特','119' => '老挝','120' => '黎巴嫩','121' => '澳门','122' => '马来西亚','123' => '马尔代夫','124' => '蒙古','125' => '尼泊尔联邦民主共和国','126' => '阿曼','127' => '巴基斯坦','128' => '巴勒斯坦','129' => '菲律宾','130' => '卡塔尔','131' => '沙特阿拉伯','132' => '新加坡','133' => '韩国','134' => '斯里兰卡','135' => '叙利亚','136' => '泰国','137' => '土耳其','138' => '阿联酋','139' => '也门','141' => '越南','142' => '中国','143' => '台澎金马关税区','144' => '东帝汶','145' => '哈萨克斯坦','146' => '吉尔吉斯斯坦','147' => '塔吉克斯坦','148' => '土库曼斯坦','149' => '乌兹别克斯坦','199' => '亚洲其他国家(地区)','201' => '阿尔及利亚','202' => '安哥拉','203' => '贝宁','204' => '博茨瓦那','205' => '布隆迪','206' => '喀麦隆','207' => '加那利群岛','208' => '佛得角','209' => '中非','210' => '塞卜泰(休达)','211' => '乍得','212' => '科摩罗','213' => '刚果(布)','214' => '吉布提','215' => '埃及','216' => '赤道几内亚','217' => '埃塞俄比','218' => '加蓬','219' => '冈比亚','220' => '加纳','221' => '几内亚','222' => '几内亚比绍','223' => '科特迪瓦','224' => '肯尼亚','225' => '利比里亚','226' => '利比亚','227' => '马达加斯加','228' => '马拉维','229' => '马里','230' => '毛里塔尼亚','231' => '毛里求斯','232' => '摩洛哥','233' => '莫桑比克','234' => '纳米比亚','235' => '尼日尔','236' => '尼日利亚','237' => '留尼汪','238' => '卢旺达','239' => '圣多美和普林西比','240' => '塞内加尔','241' => '塞舌尔','242' => '塞拉利昂','243' => '索马里','244' => '南非','245' => '西撒哈拉','246' => '苏丹','247' => '坦桑尼亚','248' => '多哥','249' => '突尼斯','250' => '乌干达','251' => '布基纳法索','252' => '刚果(金)','253' => '赞比亚','254' => '津巴布韦','255' => '莱索托','256' => '梅利利亚','257' => '斯威士兰','258' => '厄立特里亚','259' => '马约特','299' => '非洲其他国家(地区)','301' => '比利时','302' => '丹麦','303' => '英国','304' => '德国','305' => '法国','306' => '爱尔兰','307' => '意大利','308' => '卢森堡','309' => '荷兰','310' => '希腊','311' => '葡萄牙','312' => '西班牙','313' => '阿尔巴尼亚','314' => '安道尔','315' => '奥地利','316' => '保加利亚','318' => '芬兰','320' => '直布罗陀','321' => '匈牙利','322' => '冰岛','323' => '列支敦士登','324' => '马耳他','325' => '摩纳哥','326' => '挪威','327' => '波兰','328' => '罗马尼亚','329' => '圣马力诺','330' => '瑞典','331' => '瑞士','334' => '爱沙尼亚','335' => '拉脱维亚','336' => '立陶宛','337' => '格鲁吉亚','338' => '亚美尼亚','339' => '阿塞拜疆','340' => '白俄罗斯','343' => '摩尔多瓦','344' => '俄罗斯联邦','347' => '乌克兰','349' => '塞尔维亚和黑山','350' => '斯洛文尼亚','351' => '克罗地亚','352' => '捷克','353' => '斯洛伐克','354' => '前南马其顿','355' => '波黑','356' => '梵蒂冈城国','357' => '法罗群岛','358' => '塞尔维亚','359' => '黑山','399' => '欧洲其他国家(地区)','401' => '安提瓜和巴布达','402' => '阿根廷','403' => '阿鲁巴','404' => '巴哈马','405' => '巴巴多斯','406' => '伯利兹','408' => '玻利维亚','409' => '博内尔','410' => '巴西','411' => '开曼群岛','412' => '智利','413' => '哥伦比亚','414' => '多米尼克','415' => '哥斯达黎加','416' => '古巴','417' => '库腊索岛','418' => '多米尼加共和国','419' => '厄瓜多尔','420' => '法属圭亚那','421' => '格林纳达','422' => '瓜德罗普','423' => '危地马拉','424' => '圭亚那','425' => '海地','426' => '洪都拉斯','427' => '牙买加','428' => '马提尼克','429' => '墨西哥','430' => '蒙特塞拉特','431' => '尼加拉瓜','432' => '巴拿马','433' => '巴拉圭','434' => '秘鲁','435' => '波多黎各','436' => '萨巴','437' => '圣卢西亚','438' => '圣马丁岛','439' => '圣文森特和格林纳丁斯','440' => '萨尔瓦多','441' => '苏里南','442' => '特立尼达和多巴哥','443' => '特克斯和凯科斯群岛','444' => '乌拉圭','445' => '委内瑞拉','446' => '英属维尔京群岛','447' => '圣其茨和尼维斯','448' => '圣皮埃尔和密克隆','449' => '荷属安地列斯','499' => '拉丁美洲其他国家(地区)','501' => '加拿大','502' => '美国','503' => '格陵兰','504' => '百慕大','599' => '北美洲其他国家(地区)','601' => '澳大利亚','602' => '库克群岛','603' => '斐济','604' => '盖比群岛','605' => '马克萨斯群岛','606' => '瑙鲁','607' => '新喀里多尼亚','608' => '瓦努阿图','609' => '新西兰','610' => '诺福克岛','611' => '巴布亚新几内亚','612' => '社会群岛','613' => '所罗门群岛','614' => '汤加','615' => '土阿莫土群岛','616' => '土布艾群岛','617' => '萨摩亚','618' => '基里巴斯','619' => '图瓦卢','620' => '密克罗尼西亚联邦','621' => '马绍尔群岛','622' => '帕劳','623' => '法属波利尼西亚','625' => '瓦利斯和浮图纳','699' => '大洋洲其他国家(地区)','701' => '国(地)别不详','702' => '联合国及机构和国际组织','999' => '中性包装原产国别','260' => '南苏丹共和国'
		);

		if($on == true){
			return $arr;
		}

		$str = trim($str);
		// $arr = array_flip($arr);//反转数组中所有的键以及它们关联的值
		return $arr[$str];
	}

	// 币制代码表
	function coin_code($str){
		$str = trim($str);
		$arr = array('110' => '港币','116' => '日本元','121' => '澳门元','129' => '菲律宾比索','132' => '新加坡元','136' => '泰国铢','142' => '人民币','300' => '欧元','302' => '丹麦克朗','303' => '英镑','304' => '德国马克','305' => '法国法郎','307' => '意大利里拉','312' => '西班牙比赛塔','315' => '奥地利先令','318' => '芬兰马克','326' => '挪威克朗','330' => '瑞典克朗','331' => '瑞士法郎','398' => '清算瑞士法郎','501' => '加拿大元','502' => '美元','601' => '澳大利亚元','609' => '新西兰元',
		);
		
		$arr = array_flip($arr);//反转数组中所有的键以及它们关联的值
		return (isset($arr[$str])) ? $arr[$str] : '142';
	}
	
    /** 生成xml格式 中转管理里面的所有快递类型的公用方法 */
    function arrayToXml($arr, $funcy){

        $xml = "";
        
        foreach ($arr as $key=>$val){
            if(is_numeric($key)){
                $xml .= "<".$funcy.">".arrayToXml($val, $funcy)."</".$funcy.">";
            }else{
                if(is_array($val)){
                    $xml.="<".$key.">".arrayToXml($val, $funcy)."</".$key.">";
                }else{
                    $xml.="<".$key.">".$val."</".$key.">";
                }
            }
        }

        return $xml;
    }

    // xml转成数组
	function xmlToArray($xml){
        //禁止引用外部xml实体
        libxml_disable_entity_loader(true);
        $values = json_decode(json_encode(simplexml_load_string($xml, 'SimpleXMLElement', LIBXML_NOCDATA)), true);
        return $values;
    }

	//对象转数组 方法1
	function object_array($array) {
	    if(is_object($array)) {
	        $array = (array)$array;
	    }
	    if(is_array($array)) {
	        foreach($array as $key=>$value) {
	            $array[$key] = object_array($value);
	        }
	    }
	    return $array;
	}

	/**
	 * 对象 转 数组  方法2
	 * @param object $obj 对象
	 * @return array
	 */
	function object_to_array($obj){
		$obj = (array)$obj;
		foreach ($obj as $k => $v){
			if (gettype($v) == 'resource'){
				return;
			}
			if (gettype($v) == 'object' || gettype($v) == 'array'){
				$obj[$k] = (array)object_to_array($v);
			}
		}

		return $obj;
	}
	
    //美快BC优选2 错误代码转换文字说明
    function MKBc2_code($code){
    	//业务错误信息
    	$arr1 = array(
    		'B99' => '非法的物流订单号','B01' => '不能进行操作，当前状态是：等待确认','B02' => '不能进行操作，当前状态是：接单','B03' => '不能进行操作，当前状态是：不接单','B04' => '不能进行操作，当前状态是：揽收成功','B05' => '不能进行操作，当前状态是：揽收失败','B06' => '不能进行操作，当前状态是：签收成功','B07' => '不能进行操作，当前状态是：签收失败','B08' => '不能进行操作，当前状态是：订单已取消','B09' => '不能进行操作，运单号为空','B10' => '不能进行操作，签收信息为空(包括运单号、签收姓名、签收时间不能为空)',
    	);

    	//系统错误信息
    	$arr2 = array(
    		'S01' => '非法的XML格式','S02' => '非法的数字签名','S03' => '非法的物流公司','S04' => '非法的通知类型','S05' => '非法的通知内空','S07' => '系统异常，请重试','S08' => '非法的电商平台',
    	);

    	$arr = array_merge($arr1 , $arr2);
    	return ($arr[$code] != '') ? $arr[$code] : '未知错误';
    }

	/**
	 * [createTxt 美快BC优选2  生成.txt日志文件]
	 * @param  [type] $no   	   [运单号]
	 * @param  [type] $text 	   [需要保存的内容]
	 * @param  [type] $data_digest [签名的内容经过md5和base64后]
	 * @return [type]       [description]
	 */
	function createTxt($no, $text, $path){
		$file_name = 'MkBc2_'.$no.'_'.time().'.txt';	//文件名
		
		$content = "====== xml =======\r\n".$text;
		
		if(!is_dir($path)) mkdir($path, 0777);

		file_put_contents($path.$file_name, $content);
	}

	/**
	 *  将普通数据转成树形结构
	 *  @param array   $list   传进来的数组
	 *  @param num     $pid    上一级的ID（数据表需要有pid字段）
	 *  @param num     $level  它的等级（数据表需要有level字段）
	 *  @return array
	 */
	function getTree($list,$pid=0,$level=0)
	{
		// dump($list);die;
	    static $tree = array();
	    //如果$list为null，说明想清空数据
	    if(is_null($list))
	    {
	    	$tree = array();
	        return $tree;
	    }
	    foreach($list as $row){
	    	// dump($row);die;
	        if($row['fid']==$pid){
	            $row['level'] = $level;
	            $tree[] = $row;
	            getTree($list,$row['id'],$level + 1);
	        }
	    }
	    return $tree;
	}

	// 验证金额格式
	function check_money_rule($price){
        // 验证金额是否为数字
        if(!is_numeric($price)){
            return array('state'=>'no', 'msg'=>'金额格式必须为数字');
        }

        //验证金额格式
        $chemon = "/^\d+(\.{0,1}\d+){0,1}$/";
        if(!preg_match($chemon,$price)){
            return array('state'=>'no', 'msg'=>'错误的金额格式');
        }
	}