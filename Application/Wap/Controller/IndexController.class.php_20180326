<?php
namespace Wap\Controller;
use Think\Controller;
class IndexController extends Controller {

	//首页
    public function index(){
       	$this->display();
    }

    //搜索
    public function search(){
		$order_no = I('order_no');

		if(!empty($order_no)){
			// $match 	= "/^MK[a-zA-Z0-9]{10,12}$/";			


	    	// if(!preg_match($match,$MKNO)){
	    	// 	die('请输入正确美快单号，例如：MK881000987US');
	    	// }

			vendor('Hprose.HproseHttpClient');
			$client = new \HproseHttpClient(C('RAPIURL').'/Server');
			//$list = $client->query($MKNO);   // 放在erpsms下，方便不同环境显示不同

			//$str = '[{"time":"2015-10-10 10:10:10","kd":"创建订单","by":"管理员"}]';
			//echo $str .'<br/>';
			//echo base64_encode($str);//exit;

			/*
				Man 20151201 当ERP打开时 传来 SMS(内容为与该单号相关联的ERP数据),但在官网是不显示的
			*/
			$this->esms = '';
			$this->esmc = 0;
			$erpsms 	= I('SMS','');
			$erpsms 	= str_replace(" ","+",$erpsms);
			//echo $erpsms;
			if($erpsms<>''){
				$list = $client->query($order_no,2);
				if($erpsms = base64_decode($erpsms)){
					if($erpsms = json_decode($erpsms,true)){
						$this->esms = $erpsms;
						$this->esmc = count($this->esms);
					}
				}
			}else{
				$list = $client->query($order_no,1);
			}
			//============
			$this->assign('order_no',$order_no);
			// $this->assign('MKNO',$order_no);
			$this->assign('list',$list);

			//exit;
		}

    	$this->display();
    }

    //补录资料及税费 视图
    public function record(){
		vendor('Hprose.HproseHttpClient');
		$client = new \HproseHttpClient(C('RAPIURL').'/Certificates');
    	//如传来 MKNO时
    	// $mkno = 'MK81000053US';//测试
    	$order_no = trim(I('order_no'));
    	$data = I('get.data');
    	$data = json_decode(base64_decode($data),ture);
    	$this->assign('res',$data);
    	//如果$mkno不为空
    	if($order_no != ''){
    		//检查MKNO是否存在
    		$check = $client->check($mkno);
	    	//存在
	    	if($check && $check['IL_state'] < 200){

	    		//检查对应的tran_list.TranKd对应的线路是否要求身份证(1即为申通的，需要填写身份证号码)
	    		// if($check['cid'] == '1'){

	    			//if(empty($check['idno']) || $check['idno'] == '8'){
	    				$this->assign('order_no',$order_no);
	    			//}else{
	    				//$this->assign('tips','无需补录资料');
	    			//}
	    			
	    		// }else{
	    		// 	//不要求上传身份证时显示：无需补录资料
		    	// 	$this->assign('tips','无需补录资料');
		    	// 	$this->assign('url',U('Index/search',array('MKNO'=>$check['MKNO'])));
		    	// 	$this->assign('swit',1);
	    		// }
	    	
	    	}else if($check && $check['IL_state'] >= 200){
	    		$this->assign('tips','无需补录资料');
	    		$this->assign('url',U('Index/search',array('order_no'=>$check['order_no'])));
	    		$this->assign('swit',1);
	    	}else if(!$check){
	    		$this->assign('tips','美快单号['.$order_no.']不存在');
	    		$this->assign('url',U('Index/record'));
	    		$this->assign('swit',2);
	    	}
    	}
    	$this->display();
    }

    //第一步 快件信息
    public function step_one(){
    	if(IS_AJAX){
    		// sleep(1);
	    	vendor('Hprose.HproseHttpClient');
			$client = new \HproseHttpClient(C('RAPIURL').'/Certificates');

			$arr = array(
				'order_no'     => trim(I('order_no')),
				'receiver'     => trim(I('rec')),
				'reTel '       => trim(I('phone')),
			);

			$backArr = $client->add_one($arr);
			$backArr['url'] = U('Index/search',array('order_no'=>$arr['order_no']));
			$this->ajaxReturn($backArr);
    	}
    }

    //第二步 身份证信息
    public function step_two(){
    	if(IS_POST){
    		// 进行上传操作
    		$res['id_type_img'] = $this->file_upload($_FILES['id_type_img']);
    		$res['id_type_img2'] = $this->file_upload($_FILES['id_type_img2']);
    		// 返回出错信息
    		if(!$res['id_type_img']['success']){
    			$this->ajaxReturn(array(
    				'status' => '303',
    				'msg' => $res['id_type_img']['info'],
    			));
    		}
    		// 返回出错信息
    		if(!$res['id_type_img2']['success']){
    			$this->ajaxReturn(array(
    				'status' => '303',
    				'msg' => $res['id_type_img2']['info'],
    			));
    		}

    		$file['front_id_img'] = $res['id_type_img']['info'];
    		$file['back_id_img'] = $res['id_type_img2']['info'];

  			// 删除没上传的文件域
    		foreach($file as $k => $v){
    			if(empty($v)){
    				unset($file[$k]);
    			}
    		}
    		if(!empty($file['front_id_img'])){
    			$file['front_file_name'] = $_FILES['id_type_img']['name'];
    		}
    		if(!empty($file['back_id_img'])){
    			$file['back_file_name'] = $_FILES['id_type_img2']['name'];
    		}
    		if(!empty($file)){

    			$file['user_id'] = I('post.user_id');
    			$file['true_name'] = trim(I('post.receiver'));
    			$file['idno'] = trim(I('cnumber'));
    			$file['id_img'] = '';
    		}   		

	    	vendor('Hprose.HproseHttpClient');
			$client = new \HproseHttpClient(C('RAPIURL').'/Certificates');

			$id       = trim(I('sid'));	        //id
			$order_no = trim(I('order_no'));	//order_no
			$arr      = array(
				'idno' =>trim(I('cnumber')),	//身份证号码
			);


			// $backArr = $client->add_two($mkno,$arr);
			$backArr = $client->add_two($id,$arr,$file);
			$backArr['url'] = U('Index/search',array('order_no'=>$order_no));

			// dump($order_no);die;
			if($backArr['status'] == '1'){
				$backArr['msg'] = '您已成功提交资料';
			}else if($backArr['status'] == '400'){
				$backArr['msg'] = '无需保存资料';	
			}else if($backArr['status'] == '0'){
				$backArr['msg'] = '保存失败';
			}else if($backArr['status'] == '401'){
				$backArr['msg'] = '身份证号码有误';
			}
			$this->ajaxReturn($backArr);
    	}
    }
    //上传身份证
	public function file_upload($file){
		if($file['error'] == 4){
			return array(
				'success'=>true,
				'info'=>'',
			);
		}else if($file['error'] != 0){
			return array(
				'success'=>false,
				'info'=>'上传失败，请重新再试',
			);
		}else{
	        if(intval($file['size']) > 4200000){
	            // echo '单个图片的大小不可超过4M';
	            return array(
					'success'=>false,
					'info'=>'单个图片的大小不可超过4M',
				);
	        }

	        //扩展名是否 ('jpg', 'png', 'jpeg')
	        $type = explode("/",$file['type']); 
	        if(!in_array($type['1'],array('jpg','png','jpeg'))){
	            return array(
					'success'=>false,
					'info'=>'文件必须为图片！',
				);
	        }

	        // dump(WU_ABS_FILE);die;

	        //上传证件照
	        $upload           = new \Think\Upload();            // 实例化上传类
	        $upload->maxSize  = 4200000;                        // 设置附件上传大小  不超过800k 上面设置了大小限制，这里不需要
	        $upload->exts     = array('jpg', 'png', 'jpeg');    // 设置附件上传类型
	        $upload->rootPath = WU_ABS_FILE."/";                // 设置文件上传保存的根路径
	        $upload->savePath = C('UPLOADS_ID_IMG');            // 设置文件上传的保存路径（相对于根路径）
	        $upload->autoSub  = true;                           // 自动子目录保存文件
	        $upload->subName  = array('date','Ymd');
	        $upload->saveName = array('uniqid',mt_rand());      // 设置上传文件名

	        $res = $upload->uploadOne($file);
	        if(!$res){
	            return array(
					'success'=>false,
					'info'=>'上传失败，请重新再试',
				);
	        }

	        //上传成功
	        return array(
				'success'=>true,
				'info'=> $res['savepath'] . $res['savename'],
			);
		}
	}
}